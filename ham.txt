#include<bits/stdc++.h>
using namespace std;
int main()
{
   ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    freopen("bai.inp","r",stdin);
    freopen("bai.out","w",stdout);
}
//ham kiem tra doi xung
bool doi_xung(string s)
{
    string n=s;
    reverse(n.begin(), n.end());
    if(n==s) return 1;
    return 0;
} 

//phan tich ra thua so ngto
void abc(int n)
{
    int y = sqrt(n);
    for (int i = 2; i <= y; i++) {
        while (n % i == 0) {
            n /= i;
            M[i]++;
        }
    }
    if (n > 1) M[n]++;
}

// so nt:
//sang nguyen to:
bool sang[N] ;
void kt(){
    fill(sang , sang + N + 1 ,true);
    sang[0] = sang[1] = false;
    for(int i = 2 ; i <= N ; i ++){
        if (sang[i])
            for (int j = i*2 ; j <= N ; j += i)
                sang[j] = false;
    }
}

bool kt_snt(int x){
	if(x<2) return false;
	int y=sqrt(x);
	for(int i=2; i<=y; i++)
		if(x%i==0) return false;
	return true;
}
void snt_1(int n,bool kt[]){
	kt[0]=kt[1]=true;
	int y=sqrt(n);
	for(int i=2; i<=y; i++)
		if(!kt[i])
			for(int j=i*i; j<=n; j+=i)
				kt[j]=true;
}
void snt_2(int n,bool kt[],int a[],int m){
	kt[0]=kt[1]=true;
	int y=sqrt(n);
	for(int i=2; i<=y; i++)
		if(!kt[i]){
			a[++m]=i;
			for(int j=i*i; j<=n; j+=i)
				kt[j]=true;
		}
	for(int i=y+1; i<=n; i++)
		if(!kt[i]) a[++m]=i;
}
void pt_snt(int x,int a[]){
	int y=sqrt(x);
	for(int i=2; i<=y; i++){
		if(x<2) return;
		while(x%i==0){
			a[i]++;
			x/=i;
		}
	}
	if(x>1) a[x]=1;
}

// uoc so:
// UCLN: vi du: int a=__gcd(x,y);
// BCNN: x*y/UCLN
int dem_uoc(int x){
	if(x<1) return 0;
	else if(x==1) return 1;
	int y=sqrt(x);
	int res=2;
	for(int i=2; i<=y; i++){
		if(x<2) return res;
		int cnt=0;
		while(x%i==0){
			cnt++;
			x/=i;
		}
		res*=(cnt+1);
	}
	if(x>1) res*=2;
	return res;
}
int tong_uoc(int x){
	if(x<1) return 0;
	else if (x==1) return 1;
	int res=1+x;
	int y=sqrt(x);
	for(int i=2; i<=y; i++)
		if(x%i==0) res+=i+x/i;
	if(y*y==x) res-=y;
	return res;
}

// tim kiem nhi phan
int timkiem1(int x,int a[],int l,int r){ //vi tri dau tien cua x trong day
	int mid,pos=0;
	while(l<=r){
		mid=(l+r)>>1;
		if(a[mid]==x){
			r=mid-1; pos=mid;
		}else if(a[mid]<x) l=mid+1;
		else r=mid-1;
	}
	return pos;
}
int timkiem2(int x,int a[],int l,int r){ //vi tri cuoi cung cua x trong day
	int mid,pos=0;
	while(l<=r){
		mid=(l+r)>>1;
		if(a[mid]==x){
			l=mid+1; pos=mid;
		}else if(a[mid]<x) l=mid+1;
		else r=mid-1;
	}
	return pos;
}
int timkiem3(int x,int a[],int l,int r){ //vi tri cua so dau tien >= x
	int mid,pos=0;
	while(l<=r){
		mid=(l+r)>>1;
		if(a[mid]<x) l=mid+1;
		else{
			r=mid-1; pos=mid;
		}
	}
	return pos;
}
int timkiem4(int x,int a[],int l,int r){ //vi tri cua so cuoi cung <= x
	int mid,pos=0;
	while(l<=r){
		mid=(l+r)>>1;
		if(a[mid]<x){
			l=mid+1; pos=mid;
		}else r=mid-1;
	}
	return pos;
}

// Luong giac :
//cach doi do - radians:
//double x=(double)do/180*acos(-1);
// Suy ra: cos(x); sin(x); tan(x);

// so lon:
string add(string a, string b)
{
    string res="";
    while(a.length() < b.length()) a="0"+a;
    while(b.length() < a.length()) b="0"+b;
    int carry=0;
    for(int i=a.length()-1;i>=0;i--)
    {
        int tmp=a[i]-48 + b[i]-48 + carry;
        carry=tmp/10;
        tmp=tmp%10;
        res=(char)(tmp+48)+res;
    }
    if(carry>0) res="1"+res;
    return res;
}
string tru(string x,string y){
    int sx=x.length();
    int sy=y.length();
	int l=abs(sx-sy);
	if(sx<sy) for(int i=1; i<=l; i++) x='0'+x;
	else for(int i=1; i<=l; i++) y='0'+y;
    string am="";
	if(x<y){
		am="-";
		swap(x,y);
	}
    int nho=0;
    l=x.length();
    for(int i=l-1; i>=0; i--){
     	int r=x[i]-y[i]-nho;
     	if(r<0){
     		r+=10;
			nho=1;	
		}else nho=0;
        z=char(r+48)+z;
    }
    int i=0;
    while(z[i]=='0') i++;
    z.erase(0,i);
        z=am+z;
    return z;
}
string nhan(string s,int x){
    int l=s.length(),nho=0;
    string res="";
    for(int i=l-1; i>=0; i--){
    	int so=(s[i]-'0')*x+nho;
    	nho=so/10;
    	res=char(so%10+'0')+res;
	}
	if(nho>0) res=char(nho+'0')+res;
	return res;
}
//doi xau sang so
int stringToInt(const std::string& str)
{
    int result = 0;
    for (char c : str) {
        if (!std::isdigit(c)) {
            return -1;
        }
        result = result * 10 + (c - '0');
    }
    return result;
}
// doi so sang xau
string ssx(unsigned int n)// ham doi so sang xau
{
stringstream ss;
ss<<n;
return ss.str();
}
// doi vitri sang ky tu
char c=char(n)// vd char(97)='a'
//chuyen ky tu sang so
S[i]-'0' hoac s[i]-48
// tinh tong cac chu so(so lon)
int summ(string s){
	int sum=0;
	int l=s.length();
		for(int i=0;i<l;i++)
			sum+=s[i]-'0';//hoac -48
				return sum;
		}
int main(){
	
	return 0;
}
cout<<fixed<<setprecision(3)<<   /// dua ra so va so thap phan sau dau phay

//day con tang khong ngat
int lengthOfLIS(vector<int>& nums)
{

    int n = nums.size();
    vector<int> ans;

    ans.push_back(nums[0]);

    for (int i = 1; i < n; i++) {
        if (nums[i] > ans.back()) { //neu tim day con khong giam thi la dau >=
            ans.push_back(nums[i]);
        }
        else {
            int low = lower_bound(ans.begin(), ans.end(),
                                  nums[i])
                      - ans.begin();

            ans[low] = nums[i];
        }
    }
    return ans.size();
}

// chia du x^y cho m
long long mod(long long x, long long y, int m)
{
    if (y==1) return x%m;
    long long t=mod(x,y/2,m);
    if (y%2==0) return (t*t) % m;
    return ((x %m)*(t*t %m) %m);
}